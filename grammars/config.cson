'scopeName': 'source.armaConfig'
'fileTypes': [
  'hpp'
  'cpp'
  'ext'
  'sqm'
  'cfg'
  'ini'
]
'name': 'Arma config'
'patterns': [
  {
    'match': '\\b(class)\\b'
    'name': 'storage.type.cpp'
  }
  {
    'match': '\\b(#define)\\b'
    'name': 'storage.type.cpp'
  }
  {
    'match': '\\b0x[a-fA-F\\d]+|\\b\\d+(\\.\\d+)?([eE]-?\\d+)?|\\.\\d+([eE]-?\\d+)?'
    'name': 'constant.numeric.sqf'
  }
  {
    'match': '<\\=|>\\=|\\=\\=|<|>|\\!\\=|!'
    'name': 'keyword.operator.comparison.sqf'
  }
  {
    'match': '\\+|\\-|%|<<|>>|&|\\||\\^|~'
    'name': 'keyword.operator.arithmetic.sqf'
  }
  {
    'match': '\\='
    'name': 'keyword.operator.assignment.sqf'
  }
  {
    'begin': '//'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.comment.sqf'
    'end': '$\\n?'
    'name': 'comment.line.sqf'
  }
  {
    'begin': '/\\*'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.sqf'
    'end': '\\*/'
    'name': 'comment.block.sqf'
  }
  {
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.sqf'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.sqf'
    'name': 'string.quoted.double.sqf'
  }
  {
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.sqf'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.sqf'
    'name': 'string.quoted.sqf'
  }
  {
    'begin': '@"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.sqf'
    'end': '"@'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.sqf'
    'name': 'string.quoted.region.sqf'
  }

      {
        'begin': '\\b(class|struct)\\b\\s*([_A-Za-z][_A-Za-z0-9]*\\b)?+(\\s*:\\s*(public|protected|private)\\s*([_A-Za-z][_A-Za-z0-9]*\\b)((\\s*,\\s*(public|protected|private)\\s*[_A-Za-z][_A-Za-z0-9]*\\b)*))?'
        'beginCaptures':
          '1':
            'name': 'storage.type.cpp'
          '2':
            'name': 'entity.name.type.cpp'
          '4':
            'name': 'storage.type.modifier.cpp'
          '5':
            'name': 'entity.name.type.inherited.cpp'
          '6':
            'patterns': [
              {
                'match': '[_A-Za-z][_A-Za-z0-9]*'
                'name': 'entity.name.type.inherited.cpp'
              }
            ]
        'end': '(?<=\\})|(?=(;|\\(|\\)|>|\\[|\\]|=))'
        'name': 'meta.class-struct-block.cpp'
      }

]
